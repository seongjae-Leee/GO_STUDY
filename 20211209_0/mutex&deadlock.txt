뮤텍스는, "여러 프로세스나 쓰레드가 동시에 공유 자원에 접근하는 것을 제어하기 위한 방법"이다.
즉, 임계구역(Critical Section)을 가진 스레드들의 Running Time이 서로 겹치지 않게 각각 단독으로 실행되게 하는 기술.

다중 프로세스들의 공유 리소스에 대한 접근을 조율하기 위해 locking과 unlocking을 사용한다.
예를 들면,
A thread가 Lock을 걸고 공유자원을 지지고 볶고 하고 있으면, 
B thread는 공유자원을 쓰고 싶어도 A thread가 unLock할 때까지 wait 상태가 된다.

이 기술을 사용하지 않으면, 여러 쓰레드들이 공유 자원을 동시에 접근할 수 있기 때문에
충돌이 일어나 의도되지 않은 데이터의 변화가 일어나게 된다. --> 프로그램 죽을 수도 있음!
즉, 여러 쓰레드가 공유 자원을 동시에 사용(충돌)할 수 없도록
공유자원에 접근하는 코드를 짤 때는 꼭 앞 뒤에 lock,unlock 추가해야 된다는 것을 기억하자! 

임계구역(Critical Section)은 (둘 이상의 스레드가 동시에 접근해서는 안되는) 공유자원을 접근하는 코드의 일부이다.
쉽게 말해서 임계영역에 접근하려고 하는 스레드들은 동시에 임계영역에 접근할 수 없다.
즉, 한 임계구역 당 하나의 스레드만이 접근할 수 있다.

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

만약 뮤텍스가 제대로가 동작을 안 하면 데드락에 빠질 수도 있다.
데드락은 "여러 프로세스가 서로 공유 자원을 내놓기를 바라면서 무한정 기다리는 상태"를 말한다. 

예를 들면, A 프로세스가 lock을 건 상태로 죽어버리면 (unlock을 하지 못하고), B프로세스는 A프로세스가 unlock을 하지 않았기 때문에
공유 자원을 쓰지 못하고 무한정 기다리게 된다.

